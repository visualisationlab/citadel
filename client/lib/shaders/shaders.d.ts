export declare module Shaders {
    const circleShader = "\n        float ringWidth = 0.45;\n        vec3 outerColor = vec3(1.0,1.0,0.7);\n        uniform vec4 innerColor;\n\n        varying vec2 vTextureCoord; //The coordinates of the current pixel\n        uniform sampler2D uSampler; //The image data\n        uniform vec2 resolution; // Screen res.\n\n        vec4 outline(float width, vec2 tc, vec3 outerColor, vec4 innerColor) {\n            vec4 t = innerColor;\n            tc -= 0.5;\n            // tc.x *= resolution.x / resolution.y;\n\n            float grad = length(tc);\n            float circle = smoothstep(0.5, 0.49, grad);\n            float ring = circle - smoothstep(width, width-0.005, grad);\n\n            t = (t * (circle - ring));\n            t.rgb += (ring * outerColor);\n\n            return t;\n        }\n\n        void main( )\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n            return;\n\n            vec2 uv = vTextureCoord;\n\n            vec4 t = outline(ringWidth, uv, outerColor, innerColor);\n\n            gl_FragColor = t;\n        }\n    ";
}
